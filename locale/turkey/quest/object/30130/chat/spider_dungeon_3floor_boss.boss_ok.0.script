if ( pc . get_channel_id ( ) == 2 or pc . get_channel_id ( ) == 3 or pc . get_channel_id ( ) == 4 or pc . get_channel_id ( ) == 5 or pc . get_channel_id ( ) == 6 ) then 
say_title ( "Mantar Zindaný:" ) 
say ( "Sadece 1. kanaldan giriþ yapabilirsin." ) 
return 
end 
if game . get_event_flag ( "spider_lair_ongoing_" .. get_channel_id ( ) ) == 1 then 
local starttime = game . get_event_flag ( "spider_lair_start_time_" .. get_channel_id ( ) ) 
local current_time = get_global_time ( ) 
if party . get_leader_pid ( ) == game . get_event_flag ( "spider_lair_leader_" .. get_channel_id ( ) ) then 
if starttime + 300 >= current_time and party . get_leader_pid ( ) == game . get_event_flag ( "spider_lair_leader_" .. get_channel_id ( ) ) and game . get_event_flag ( "spider_lair_ongoing_" .. get_channel_id ( ) ) == 1 then 
say ( "Grup liderin yuvaya girdi. Sen de içeriye[ENTER]girip Barones ile savaþmak istiyor musun? " ) 
local warp = select ( locale . confirm , locale . cancel ) 
if warp == 1 then 
pc . setqf ( "firstIn" , 1 ) 
pc . setqf ( "retry_limit_time" , starttime + 1200 + 3600 ) 
set_state ( "inLair" ) 
pc . warp ( 88100 , 614800 ) 
return 
end 
else 
say ( "Süre bitti. Anahtar parçalandý.[ENTER]Yeniden Anahtar üretmelisin. " ) 
return 
end 
else 
local remain_time = ( game . get_event_flag ( "spider_lair_end_time_" .. get_channel_id ( ) ) - get_global_time ( ) ) / 60 
if remain_time < 0 then 
say ( "Bu iþe yaramadý. Lütfen tekrar deneyin!" ) 
game . set_event_flag ( "spider_lair_ongoing_" .. get_channel_id ( ) , 0 ) 
game . set_event_flag ( "spider_lair_leader_" .. get_channel_id ( ) , 0 ) 
game . set_event_flag ( "spider_dead" .. get_channel_id ( ) , 0 ) 
return 
end 
say ( "Þu an baþka bir grup yuvada Barones ile[ENTER]savaþýyor. Onlarýn savaþý bitirmesini bekle. " ) 
say ( string . format ( "Önceki grup içeriden çýktýktan sonra girebilirsin: Kalan zaman %s[ENTER]dakika. " , math . ceil ( remain_time ) ) ) 
return 
end 
elseif pc . getqf ( "retry_limit_time" ) > get_global_time ( ) then 
local access_limit = ( pc . getqf ( "retry_limit_time" ) - get_global_time ( ) ) / 60 
say ( "Son savaþýn üzerinden en az bir saat geçmeesi[ENTER]gerekiyor. Bu süree içesinde tekrar Barones'in[ENTER]yuvasýna giremezsin.Kalan zaman:" ) 
say ( string . format ( "%s dakika " , math . ceil ( access_limit ) ) ) 
return 
elseif party . is_leader ( ) then 
if false == pc . can_warp ( ) then 
say ( "Þu anda bu alana giremezsin.[ENTER]Lütfen biraz bekleyin." ) 
return 
end 
if pc . count_item ( 30324 ) > 0 then 
say ( "Fetih mi baþlatmak istiyorsun? Bunu yapmaya 20[ENTER]dakika zamanýn var. Bu süre bitmeden önce hiç[ENTER]kimse Barones'in yuvasýný terk edemez. Yeni bir[ENTER]fetih bir saat sonra gerçekleþtirilebilir." ) 
local warp = select ( locale . confirm , locale . cancel ) 
if warp == 1 then 
set_state ( "inLair" ) 
pc . remove_item ( 30324 , 1 ) 
mob . spawn ( 2094 , 369 , 551 , 0 , 0 ) 
game . set_event_flag ( "spider_lair_ongoing_" .. get_channel_id ( ) , 1 ) 
game . set_event_flag ( "spider_lair_start_time_" .. get_channel_id ( ) , get_global_time ( ) ) 
game . set_event_flag ( "spider_lair_end_time_" .. get_channel_id ( ) , get_global_time ( ) + 1200 ) 
game . set_event_flag ( "spider_lair_leader_" .. get_channel_id ( ) , party . get_leader_pid ( ) ) 
pc . setqf ( "retry_limit_time" , get_global_time ( ) + 1200 + 3600 ) 
pc . setqf ( "firstIn" , 1 ) 
server_timer ( "spider_end_timer" , 1200 ) 
pc . warp ( 88100 , 614800 ) 
end 
return 
else 
say ( "Bu kapýyý sadece Arachnida anahtarý açar." ) 
return 
end 
else 
say ( "Bu kapýyý ancak bir grup lideri açabilir." ) 
return 
end 
